{"version":3,"sources":["components/MainNav/index.jsx","context/woopsContext.js","components/WoopCard/index.jsx","components/WoopsFeed/index.jsx","pages/Dashboard/index.jsx","components/Input/index.jsx","pages/Login/index.jsx","components/WoopsBuilder/index.jsx","pages/Profile/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["MainNav","useState","user","setUser","navigate","useNavigate","useEffect","auth","getAuth","onAuthStateChanged","newUser","logoutUser","a","signOut","console","error","className","to","onClick","WoopsContext","React","createContext","woops","sortWoops","initializeWoops","addWoop","getUserWoops","WoopsContextProvider","children","setWoops","Provider","value","woopsFromApi","data","sort","b","Date","updateTime","getTime","newWoop","email","filter","woop","WoopCard","text","match","WoopsFeed","woopsList","length","map","i","Dashboard","feed","setFeed","woopsData","useContext","getWoopData","fetch","response","json","fData","documents","fields","textVal","stringValue","sortedWoops","INPUT_TYPES","Input","type","required","label","name","register","inputVal","setInputVal","htmlFor","onChange","e","target","Login","isLoggingIn","setIsLoggingIn","useForm","handleSubmit","loginUser","password","signInWithEmailAndPassword","signupUser","createUserWithEmailAndPassword","onSubmit","formVals","WoopsBuilder","maxLength","woopText","setWoopText","woopContext","submitWoop","preventDefault","formattedData","headers","method","body","JSON","stringify","placeholder","Profile","userWoops","setUserWoops","userWoopData","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69c680f0.chunk.js","sourcesContent":["import \"./styles.scss\";\n\nimport { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { MdLogout, MdOutlinePersonPin } from \"react-icons/md\";\n\nimport { getAuth, onAuthStateChanged, signOut } from \"firebase/auth\";\n\nexport default function MainNav() {\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const auth = getAuth();\n    onAuthStateChanged(auth, (newUser) => {\n      if (newUser) {\n        setUser(newUser);\n      } else {\n        setUser(null);\n      }\n    });\n  }, []);\n\n  const logoutUser = async () => {\n    const auth = getAuth();\n    try {\n      await signOut(auth);\n      navigate(\"/login\");\n    } catch(error) {\n      console.error(\"Error connecting to Firebase!\", error);\n    }\n  }\n\n  return (\n    <header>\n      <nav>\n        <Link className=\"woops-logo\" to={ user ? \"/\" : \"/login\" }>Woops!</Link>\n        { user ?\n          (<div className=\"acc-links\">\n            <Link className=\"profile-btn\" to=\"/me\"><MdOutlinePersonPin className=\"icon\" />Profile</Link>\n            <button\n              className=\"logout-btn\"\n              onClick={logoutUser}\n            >\n                <MdLogout className=\"icon\" />\n                Logout\n            </button>\n          </div>) :\n          null\n        }\n      </nav>\n    </header>\n  );\n}","import React, { useState } from \"react\";\n\nconst WoopsContext = React.createContext({\n  woops: [],\n  sortWoops: () => { },\n  initializeWoops: () => { },\n  addWoop: () => { },\n  getUserWoops: () => { },\n});\n\nexport const WoopsContextProvider = ({ children }) => {\n  const [woops, setWoops] = useState([]);\n\n  const sortWoops = (woopsFromApi) => {\n    const data = [...woopsFromApi];\n    data.sort((a, b) => {\n      return new Date(b.updateTime).getTime() - new Date(a.updateTime).getTime()\n    });\n    return data;\n  }\n\n  const initializeWoops = (woopsFromApi) => {\n    setWoops(woopsFromApi);\n  }\n\n  const addWoop = (newWoop) => {\n    setWoops([newWoop, ...woops]);\n  }\n\n  const getUserWoops = (email) => {\n    return woops.filter(woop => woop.email === email);\n  }\n\n  return (\n    <WoopsContext.Provider\n      value={{\n        woops,\n        sortWoops,\n        initializeWoops,\n        addWoop,\n        getUserWoops,\n      }}\n    >\n      {children}\n    </WoopsContext.Provider>\n  );\n}\n\nexport default WoopsContext;","import \"./styles.scss\";\n\nimport { IoPersonCircleSharp } from \"react-icons/io5\";\n\nexport default function WoopCard({\n  email = \"\",\n  text = \"\",\n}) {\n  return (\n    <div className=\"woop-card\">\n      <p className=\"email\"><IoPersonCircleSharp className=\"icon\"/>{email ? email.match(/^.+(?=@)/)[0] : \"\"}</p>\n      <p className=\"text\">{text}</p>\n    </div>\n  )\n}","import \"./styles.scss\";\n\nimport WoopCard from \"../WoopCard\";\n\nexport default function WoopsFeed({\n  woopsList = [],\n}) {\n  return (\n    woopsList.length > 0 ?\n    <section className=\"woops-feed\">\n      { woopsList.map(({email, text}, i) => (\n          <WoopCard key={i} email={email} text={text} />\n        ))}\n    </section> : null\n  );\n}","import \"./styles.scss\";\n\nimport { useEffect, useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\n\nimport WoopsContext from \"../../context/woopsContext\";\n\nimport WoopsFeed from \"../../components/WoopsFeed\";\n\nexport default function Dashboard() {\n  const navigate = useNavigate();\n  const [ feed, setFeed ] = useState([]);\n  const woopsData = useContext(WoopsContext);\n\n  useEffect(() => {\n    const auth = getAuth();\n    onAuthStateChanged(auth, (newUser) => {\n      if (!newUser) {\n        navigate(\"/login\");\n      } else {\n        if (woopsData.woops.length > 0) {\n          setFeed(woopsData.woops);\n        } else {\n          getWoopData();\n        }\n      }\n    });\n  });\n\n  useEffect(() => {\n    setFeed(woopsData.woops);\n  }, [woopsData.woops])\n\n  const getWoopData = async () => {\n    try {\n      const response = await fetch('https://firestore.googleapis.com/v1/projects/woops-store/databases/(default)/documents/woops/');\n      const data = await response.json();\n      const fData = data.documents.map(({\n        fields: {\n          text: { stringValue: textVal },\n          email: { stringValue: emailVal },\n        },\n        updateTime,\n      }) => ({ email: emailVal, text: textVal, updateTime }));\n      const sortedWoops = woopsData.sortWoops(fData);\n      setFeed(sortedWoops);\n      woopsData.initializeWoops(sortedWoops);\n    } catch(error) {\n      console.error(error);\n    }\n  }\n\n  return (\n    <div className=\"dashboard-wrapper\">\n      <h1>Feeling embarrassed? So are we!</h1>\n      <WoopsFeed woopsList={feed} />\n    </div>\n  );\n}","import \"./styles.scss\";\n\nimport { useEffect, useState } from \"react\";\n\nexport const INPUT_TYPES = {\n  TEXT: \"text\",\n  EMAIL: \"email\",\n  PASSWORD: \"password\",\n  SUBMIT: \"submit\",\n};\n\nexport default function Input({\n  className=\"\",\n  type = \"text\",\n  required = false,\n  label = \"\",\n  name = \"\",\n  value = \"\",\n  register = {},\n}) {\n  const [inputVal, setInputVal] = useState(\"\");\n\n  useEffect(() => {\n    setInputVal(value);\n  }, [value])\n\n  return (\n    <>\n      { type === INPUT_TYPES.TEXT ||\n        type === INPUT_TYPES.EMAIL ||\n        type === INPUT_TYPES.PASSWORD ?\n          <label htmlFor={name}>{label}</label> : null\n      }\n      <input\n        className={className}\n        {...register}\n        name={name}\n        required={required}\n        type={type}\n        onChange={(e) => setInputVal(e.target.value)}\n        value={inputVal}\n      />\n    </>\n  );\n}","import \"./styles.scss\";\n\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\n\nimport Input, { INPUT_TYPES } from \"../../components/Input\";\n\nexport default function Login() {\n  const [isLoggingIn, setIsLoggingIn] = useState(true);\n  const { register, handleSubmit } = useForm();\n\n  const navigate = useNavigate();\n\n  const loginUser = async ({ email, password }) => {\n    try {\n      const auth = getAuth();\n      await signInWithEmailAndPassword(auth, email, password);\n      navigate(\"/\");\n    } catch(error) {\n      console.error(\"Error connecting to firebase!\", error);\n    }\n  }\n\n  const signupUser = async ({ email, password }) => {\n    try {\n      const auth = getAuth();\n      await createUserWithEmailAndPassword(auth, email, password);\n      navigate(\"/\");\n    } catch(error) {\n      console.error(\"Error connecting to firebase!\", error);\n    }\n  }\n\n  const submitCredentials = (formVals) => {\n    if (isLoggingIn) {\n      loginUser(formVals);\n    } else {\n      signupUser(formVals);\n    }\n  }\n\n  return (\n    <div className=\"login-background\">\n      <div className=\"login-wrapper\">\n        <section className=\"login-text\">\n          <h1 className=\"woops-logo-animated\">Woops!</h1>\n          <p>Made a mistake?<br />Let's laugh at it together.</p>\n        </section>\n        <section className=\"login-form\">\n          <form className=\"login\" onSubmit={handleSubmit(submitCredentials)}>\n            <h2>{ isLoggingIn ? \"Login\" : \"Sign Up\" }</h2>\n            <Input\n              type={INPUT_TYPES.EMAIL}\n              required={true}\n              label=\"Email\"\n              name=\"email\"\n              register={register(\"email\")}\n            />\n            <Input\n              type={INPUT_TYPES.PASSWORD}\n              required={true}\n              label=\"Password\"\n              name=\"password\"\n              register={register(\"password\")}\n            />\n            <Input type={INPUT_TYPES.SUBMIT} value={ isLoggingIn ? \"Login\" : \"Sign Up\" } />\n          </form>\n          <div>\n            <p>{ isLoggingIn ? \"New to Woops? \" : \"Already have an account? \"}</p>\n            <button className=\"switch-mode\" onClick={() => setIsLoggingIn(!isLoggingIn)}>{ isLoggingIn ? \"Create an account\" : \"Login to your account\"}</button>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n}","import \"./styles.scss\";\n\nimport { useEffect, useState, useContext } from \"react\";\nimport WoopsContext from \"../../context/woopsContext\";\n\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\n\nimport Input from \"../Input\";\n\nexport default function WoopsBuilder({\n  maxLength = \"150\",\n}) {\n  const [ woopText, setWoopText ] = useState(\"\");\n  const [ user, setUser ] = useState(null);\n  const woopContext = useContext(WoopsContext);\n\n  useEffect(() => {\n    const auth = getAuth();\n    onAuthStateChanged(auth, (newUser) => {\n      if (newUser) {\n        setUser(newUser);\n      } else {\n        setUser(null);\n      }\n    });\n  }, [])\n\n  const onWoopChange = (e) => {\n    setWoopText(e.target.value);\n  }\n\n  const submitWoop = async (e) => {\n    e.preventDefault();\n\n    const formattedData = {\n      fields: {\n        email: {\n          stringValue: user.email,\n        },\n        text: {\n          stringValue: woopText,\n        },\n      }\n    };\n\n    try {\n      await fetch('https://firestore.googleapis.com/v1/projects/woops-store/databases/(default)/documents/woops/', {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(formattedData)\n      });\n      woopContext.addWoop({ email: user.email, text: woopText });\n      setWoopText(\"\");\n    } catch(error) {\n      console.error(error);\n    }\n  }\n\n  return (\n    <form className=\"woops-builder\" onSubmit={submitWoop}>\n      <textarea\n        onChange={onWoopChange}\n        placeholder=\"Made a mistake? Let's laugh at it together\"\n        value={woopText}\n        maxLength={maxLength}\n      ></textarea>\n      <div className=\"build-footer\">\n        <p className=\"text-count\">{woopText.length + \"/\" + maxLength}</p>\n        <Input className=\"submit-btn\" type=\"submit\" value=\"Woops!\"/>\n      </div>\n    </form>\n  );\n}","import \"./styles.scss\";\n\nimport { useEffect, useState, useContext } from \"react\";\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport WoopsBuilder from \"../../components/WoopsBuilder\";\nimport WoopsContext from \"../../context/woopsContext\";\n\nimport WoopsFeed from \"../../components/WoopsFeed\";\n\nexport default function Profile() {\n  const navigate = useNavigate();\n  const [ user, setUser ] = useState(null);\n  const [ userWoops, setUserWoops ] = useState([]);\n  const woopsData = useContext(WoopsContext);\n\n  useEffect(() => {\n    const auth = getAuth();\n    onAuthStateChanged(auth, (newUser) => {\n      if (newUser) {\n        setUser(newUser);\n      } else {\n        setUser(null);\n        navigate(\"/login\");\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (user) {\n      if (woopsData.woops.length === 0) {\n        getWoopData();\n      } else {\n        const userWoopData = woopsData.getUserWoops(user.email);\n        setUserWoops(userWoopData);\n      }\n    }\n  // eslint-disable-next-line\n  }, [user, woopsData]);\n\n  useEffect(() => {\n    if (user) {\n      const userWoopData = woopsData.getUserWoops(user.email);\n      setUserWoops(userWoopData);\n    }\n  }, [user, woopsData, woopsData.woops])\n\n  const getWoopData = async () => {\n    try {\n      const response = await fetch('https://firestore.googleapis.com/v1/projects/woops-store/databases/(default)/documents/woops/');\n      const data = await response.json();\n      const fData = data.documents.map(({\n        fields: {\n          text: { stringValue: textVal },\n          email: { stringValue: emailVal },\n        },\n        updateTime,\n      }) => ({ email: emailVal, text: textVal, updateTime }));\n      const sortedWoops = woopsData.sortWoops(fData);\n      woopsData.initializeWoops(sortedWoops);\n      setUserWoops(sortedWoops.filter(woop => woop.email === user.email));\n    } catch(error) {\n      console.error(error);\n    }\n  }\n\n  return (\n    <div className=\"profile-wrapper\">\n      <div className=\"profile-info\">\n        <h1>How are you doing, { user ? user.email.match(/^.+(?=@)/)[0] : \"username\" }?</h1>\n        <div className=\"profile-msg\">\n          { userWoops.length === 0 ?\n            <p>Don't be ashamed. Everyone makes mistakes! Everyone has those days!</p> :\n            <>\n              <p>So far, you've <span className=\"bold\">wooped</span> {userWoops.length} time{userWoops.length > 1 ? \"s\" : \"\"}! That's a lot of learning you've done!</p>\n              <p>Care to share more? Or maybe we'll just look back on it and laugh (or try to!)</p>\n            </>\n          }\n        </div>\n      </div>\n      <WoopsBuilder />\n      <WoopsFeed woopsList={userWoops} />\n    </div>\n  );\n}","import \"./normalize.css\";\nimport \"./fonts.scss\";\nimport './App.scss';\n\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport MainNav from \"./components/MainNav\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Login from \"./pages/Login\";\nimport Profile from \"./pages/Profile\";\n\nfunction App() {\n  return (\n    <Router>\n      <MainNav />\n      <main>\n        <Routes>\n          <Route exact path=\"/\" element={<Dashboard />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/me\" element={<Profile />} />\n        </Routes>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { WoopsContextProvider } from \"./context/woopsContext\";\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: \"woops-store.appspot.com\",\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\n\nReactDOM.render(\n  <WoopsContextProvider>\n    <App />\n  </WoopsContextProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}